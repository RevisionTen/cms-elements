
{% set translationKey = element.data.hideNEFZ is defined and element.data.hideNEFZ ? 'wltpOnly' : 'wltp' %}

<div {{ editorAttr(element, edit) }} class="vehicle-wltp {{ elementClasses(element) }} mt-4 mb-4">
    <h5 class="vehicle-wltp-heading mb-3">
        {{ element.data.title }}
    </h5>

    {% set energyEfficiencyClassMin = element.data.energyEfficiencyClassMin ?? null %}
    {% set energyEfficiencyClass = element.data.energyEfficiencyClass ?? null %}
    <div class="row">
        {% if energyEfficiencyClass %}
            <div class="col-12 col-sm-auto" style="max-width: 400px;">
                <div class="row">
                    <div class="col">
                        <p>
                            {{ 'vehicle.envkv.label.energyEfficiencyClass'|trans }}: {{ element.data.energyEfficiencyClassMin is defined and element.data.energyEfficiencyClassMin  ? element.data.energyEfficiencyClassMin~'-' : '' }}{{ element.data.energyEfficiencyClass }}
                        </p>
                        <p class="small">
                            {# Auf der Grundlage der gemessenen CO2-Emissionen unter Berücksichtigung der Masse des Fahrzeugs ermittelt. #}
                            Die angegebenen Werte wurden nach dem jeweiligen vorgeschriebenen Messverfahren (§ 2 Nrm. 5, 6, 6a Pkw-EnVKV in der jeweils geltenden Fassung) ermittelt.
                        </p>
                    </div>
                    <div class="col-auto" style="max-width: 150px;">
                        {% set energyEfficiencyClass = energyEfficiencyClass|replace({'+': 'A'}) %}
                        <p>
                            <img title="{{ 'vehicle.envkv.label.energyEfficiencyClass'|trans }}"
                                 alt="{{ 'vehicle.envkv.label.energyEfficiencyClass'|trans }}"
                                 class="w-100 h-auto"
                                 src="{{ asset('bundles/cmselements/images/vehicle/energy-efficiency.svg') }}?#{{ energyEfficiencyClass }}"
                            >
                        </p>
                    </div>
                </div>
            </div>
        {% endif %}
        <div class="vehicle-wltp-body col-12 col-sm-auto">
            {% set fuelType = element.data.fuelType %}
            {% set hasBattery = 'electricity' == fuelType or 'hydrogen' == fuelType or 'hybrid' == fuelType or 'hybrid_petrol' == fuelType or 'hybrid_diesel' == fuelType %}
            {% set hasFossilFuel = fuelType != 'electricity' and fuelType != 'hydrogen' %}
            <p>

                {% if hasFossilFuel and hasBattery %}

                    {# Hybrid #}
                    {% if element.data.combined is defined and element.data.combined is not empty %}
                        {% if element.data.combinedMin is defined and element.data.combinedMin %}
                            {{ ('vehicle.'~translationKey~'.label.combinedFuelHybrid')|trans({
                                '%value%': element.data.combined|number_format(1, ',') ~ '-' ~ element.data.combinedMin|number_format(1, ',')
                            }) }}
                            <br/>
                        {% else %}
                            {{ ('vehicle.'~translationKey~'.label.combinedFuelHybrid')|trans({
                                '%value%': element.data.combined|number_format(1, ',')
                            }) }}
                            <br/>
                        {% endif %}
                    {% endif %}

                    {% if element.data.co2EmissionMin is defined and element.data.co2EmissionMin is not null and element.data.co2EmissionMin is not null %}
                        {{ ('vehicle.'~translationKey~'.label.co2EmissionHybrid')|trans({
                            '%value%': (element.data.co2Emission ?? 0) ~ '-' ~ (element.data.co2EmissionMin ?? 0)
                        }) }}
                        <br/>
                    {% else %}
                        {{ ('vehicle.'~translationKey~'.label.co2EmissionHybrid')|trans({
                            '%value%': (element.data.co2Emission ?? '-')
                        }) }}
                        <br/>
                    {% endif %}

                    {% if element.data.combinedPowerConsumption is defined and element.data.combinedPowerConsumption is not empty %}
                        {% if element.data.combinedPowerConsumptionMin is defined and element.data.combinedPowerConsumptionMin %}
                            {{ ('vehicle.'~translationKey~'.label.combinedPowerHybrid')|trans({
                                '%value%': element.data.combinedPowerConsumption|number_format(1, ',') ~ '-' ~ element.data.combinedPowerConsumptionMin|number_format(1, ',')
                            })|raw }}<br/>
                        {% else %}
                            {{ ('vehicle.'~translationKey~'.label.combinedPowerHybrid')|trans({
                                '%value%': element.data.combinedPowerConsumption|number_format(1, ',')
                            })|raw }}<br/>
                        {% endif %}
                    {% endif %}

                    <br/>

                    {% if element.data.motor %}
                        {{ 'vehicle.wltp.label.motor'|trans({
                            '%value%': element.data.motor
                        })|raw }}
                        <br/>
                    {% endif %}

                    {% if element.data.power is defined and element.data.power is not empty and element.data.horsepower is defined and element.data.horsepower is not empty %}
                        {{ 'vehicle.wltp.label.hybridPower'|trans({
                            '%kw%':element.data.power|number_format(0, ',', '.'),
                            '%ps%': element.data.horsepower|number_format(0, ',', '.'),
                        }) }}
                        <br/>
                    {% endif %}
                    {% if element.data.fuelPower is defined and element.data.fuelPower is not empty and element.data.fuelHorsepower is defined and element.data.fuelHorsepower is not empty %}
                        {{ 'vehicle.wltp.label.hybridFuelPower'|trans({
                            '%kw%':element.data.fuelPower|number_format(0, ',', '.'),
                            '%ps%': element.data.fuelHorsepower|number_format(0, ',', '.'),
                        }) }}
                        <br/>
                    {% endif %}
                    {% if element.data.electricPower is defined and element.data.electricPower is not empty and element.data.electricHorsepower is defined and element.data.electricHorsepower is not empty %}
                        {{ 'vehicle.wltp.label.hybridElectricPower'|trans({
                            '%kw%':element.data.electricPower|number_format(0, ',', '.'),
                            '%ps%': element.data.electricHorsepower|number_format(0, ',', '.'),
                        }) }}
                        <br/>
                    {% endif %}


                    {% if element.data.gearbox %}
                        {{ 'vehicle.wltp.label.gearbox'|trans({
                            '%value%': element.data.gearbox
                        })|raw }}
                        <br/>
                    {% endif %}
                    {% if element.data.range is defined and element.data.range is not empty %}
                        {% if element.data.rangeMin is defined and element.data.rangeMin %}
                            {{ 'vehicle.wltp.label.range'|trans({
                                '%value%': element.data.range|number_format(0, ',', '.') ~ '-' ~ element.data.rangeMin|number_format(0, ',', '.')
                            })|raw }}<br/>
                        {% else %}
                            {{ 'vehicle.wltp.label.range'|trans({
                                '%value%': element.data.range|number_format(0, ',', '.')
                            })|raw }}<br/>
                        {% endif %}
                    {% endif %}
                    {% if element.data.cubicCapacity is defined and element.data.cubicCapacity is not empty %}
                        {{ 'vehicle.wltp.label.cubicCapacity'|trans({
                            '%value%': element.data.cubicCapacity|number_format(0, ',', '.')
                        }) }}
                        <br/>
                    {% endif %}
                    {% if element.data.fuel is defined and element.data.fuel is not empty %}
                        {{ 'vehicle.wltp.label.fuel'|trans({
                            '%value%': element.data.fuel
                        }) }}
                        <br/>
                    {% endif %}
                    {% if element.data.weight is defined and element.data.weight is not empty %}
                        {{ 'vehicle.wltp.label.weight'|trans({
                            '%value%': element.data.weight|number_format(0, ',', '.')
                        }) }}
                        <br/>
                    {% endif %}

                {% elseif hasFossilFuel %}

                    {# Fossil fuel only #}
                    {% if element.data.combined is defined and element.data.combined is not empty %}
                        {% if element.data.combinedMin is defined and element.data.combinedMin %}
                            {{ ('vehicle.'~translationKey~'.label.combinedFuel')|trans({
                                '%value%': element.data.combined|number_format(1, ',') ~ '-' ~ element.data.combinedMin|number_format(1, ',')
                            })|raw }}
                            <br/>
                        {% else %}
                            {{ ('vehicle.'~translationKey~'.label.combinedFuel')|trans({
                                '%value%': element.data.combined|number_format(1, ',')
                            })|raw }}
                            <br/>
                        {% endif %}
                    {% endif %}
                    {% if element.data.co2EmissionMin is defined and element.data.co2EmissionMin is not null and element.data.co2EmissionMin is not null %}
                        {{ ('vehicle.'~translationKey~'.label.co2EmissionFuel')|trans({
                            '%value%': (element.data.co2Emission ?? 0) ~ '-' ~ (element.data.co2EmissionMin ?? 0)
                        }) }}
                        <br/>
                    {% else %}
                        {{ ('vehicle.'~translationKey~'.label.co2EmissionFuel')|trans({
                            '%value%': (element.data.co2Emission ?? '-')
                        }) }}
                        <br/>
                    {% endif %}

                    <br/>

                    {% if element.data.motor %}
                        {{ 'vehicle.wltp.label.motor'|trans({
                            '%value%': element.data.motor
                        })|raw }}
                        <br/>
                    {% endif %}
                    {% if element.data.power is defined and element.data.power is not empty and element.data.horsepower is defined and element.data.horsepower is not empty %}
                        {{ 'vehicle.wltp.label.power'|trans({
                            '%kw%':element.data.power|number_format(0, ',', '.'),
                            '%ps%': element.data.horsepower|number_format(0, ',', '.'),
                        }) }}
                        <br/>
                    {% endif %}
                    {% if element.data.gearbox %}
                        {{ 'vehicle.wltp.label.gearbox'|trans({
                            '%value%': element.data.gearbox
                        })|raw }}
                        <br/>
                    {% endif %}
                    {% if element.data.cubicCapacity is defined and element.data.cubicCapacity is not empty %}
                        {{ 'vehicle.wltp.label.cubicCapacity'|trans({
                            '%value%': element.data.cubicCapacity|number_format(0, ',', '.')
                        }) }}
                        <br/>
                    {% endif %}
                    {{ 'vehicle.wltp.label.fuel'|trans({
                        '%value%': element.data.fuel ?? (('vehicle.envkv.choices.fuel.'~element.data.fuelType)|trans)
                    }) }}
                    <br/>
                    {% if element.data.weight is defined and element.data.weight is not empty %}
                        {{ 'vehicle.wltp.label.weight'|trans({
                            '%value%': element.data.weight|number_format(0, ',', '.')
                        }) }}
                        <br/>
                    {% endif %}

                {% elseif hasBattery %}

                    {# Pure BEV #}
                    {% if element.data.combinedPowerConsumption is defined and element.data.combinedPowerConsumption is not empty %}
                        {% if element.data.combinedPowerConsumptionMin is defined and element.data.combinedPowerConsumptionMin %}
                            {{ ('vehicle.'~translationKey~'.label.combinedPowerBEV')|trans({
                                '%value%': element.data.combinedPowerConsumption|number_format(1, ',') ~ '-' ~ element.data.combinedPowerConsumptionMin|number_format(1, ',')
                            })|raw }}<br/>
                        {% else %}
                            {{ ('vehicle.'~translationKey~'.label.combinedPowerBEV')|trans({
                                '%value%': element.data.combinedPowerConsumption|number_format(1, ',')
                            })|raw }}<br/>
                        {% endif %}
                    {% endif %}
                    {% if element.data.range is defined and element.data.range is not empty %}
                        {% if element.data.rangeMin is defined and element.data.rangeMin %}
                            {{ 'vehicle.wltp.label.range'|trans({
                                '%value%': element.data.range|number_format(0, ',', '.') ~ '-' ~ element.data.rangeMin|number_format(0, ',', '.')
                            })|raw }}<br/>
                        {% else %}
                            {{ 'vehicle.wltp.label.range'|trans({
                                '%value%': element.data.range|number_format(0, ',', '.')
                            })|raw }}<br/>
                        {% endif %}
                    {% endif %}

                    <br/>

                    {% if element.data.motor %}
                        {{ 'vehicle.wltp.label.motor'|trans({
                            '%value%': element.data.motor
                        })|raw }}
                        <br/>
                    {% endif %}
                    {% if element.data.power is defined and element.data.power is not empty and element.data.horsepower is defined and element.data.horsepower is not empty %}
                        {{ 'vehicle.wltp.label.electricPower'|trans({
                            '%kw%':element.data.power|number_format(0, ',', '.'),
                            '%ps%': element.data.horsepower|number_format(0, ',', '.'),
                        }) }}
                        <br/>
                    {% endif %}
                    {% if element.data.gearbox %}
                        {{ 'vehicle.wltp.label.gearbox'|trans({
                            '%value%': element.data.gearbox
                        })|raw }}
                        <br/>
                    {% endif %}
                    {{ 'vehicle.wltp.label.fuel'|trans({
                        '%value%': 'vehicle.wltp.label.fuelElectricity'|trans
                    }) }}
                    <br/>
                    {% if element.data.weight is defined and element.data.weight is not empty %}
                        {{ 'vehicle.wltp.label.weight'|trans({
                            '%value%': element.data.weight|number_format(0, ',', '.')
                        }) }}
                        <br/>
                    {% endif %}

                {% endif %}

            </p>
        </div>
        <div class="vehicle-wltp-disclaimer col-12">
            <p>
                <em>
                    {% if hasFossilFuel and hasBattery %}
                        {{ 'vehicle.wltp.label.legalDisclaimerHybrid'|trans|raw }}
                    {% elseif hasFossilFuel %}
                        {{ 'vehicle.wltp.label.legalDisclaimerFuel'|trans|raw }}
                    {% elseif hasBattery %}
                        {{ 'vehicle.wltp.label.legalDisclaimerBEV'|trans|raw }}
                    {% endif %}
                </em>
            </p>
        </div>
    </div>
</div>
